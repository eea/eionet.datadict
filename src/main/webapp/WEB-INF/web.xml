<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">

    <display-name>Data Dictionary</display-name>

    <!-- context params -->
    <context-param>
        <param-name>application-name</param-name>
        <param-value>${app.displayName}</param-value>
    </context-param>

    <context-param>
        <param-name>appDispName</param-name>
        <param-value>${app.displayName}</param-value>
    </context-param>

    <context-param>
        <param-name>useCentralAuthenticationService</param-name>
        <param-value>${useCentralAuthenticationService}</param-value>
    </context-param>

    <!-- Spring configuration -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-context.xml</param-value>
    </context-param>

    <!-- Liquibase configuration  -->
    <context-param>
        <param-name>liquibase.changelog</param-name>
        <param-value>sql/dd-struct.xml</param-value>
    </context-param>

    <context-param>
        <param-name>liquibase.datasource</param-name>
        <param-value>java:comp/env/jdbc/datadict</param-value>
    </context-param>

    <context-param>
        <param-name>liquibase.onerror.fail</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <param-name>liquibase.contexts</param-name>
        <param-value>production</param-value>
    </context-param>

    <listener>
        <listener-class>liquibase.integration.servlet.LiquibaseServletListener</listener-class>
    </listener>

    <listener>
        <listener-class>eionet.meta.scheduled.DDJobScheduler</listener-class>
    </listener>
    <listener>
        <listener-class>eionet.meta.scheduled.VocabularyReferenceMatchJob</listener-class>
    </listener>
    <listener>
        <listener-class>eionet.meta.ContainerContextClosedHandler</listener-class>
    </listener>

    <!-- filters -->
    <filter>
        <filter-name>CAS Filter</filter-name>
        <filter-class>eionet.meta.filters.EionetCASFilter</filter-class>
    </filter>

    <filter>
        <filter-name>Browser cache controller</filter-name>
        <filter-class>eionet.meta.filters.BrowserCacheController</filter-class>
        <init-param>
            <param-name>disableBrowserCache</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter>
        <description>
            Provides essential configuration and request
            processing services
            for the Stripes framework.
        </description>
        <display-name>Stripes Filter</display-name>
        <filter-name>StripesFilter</filter-name>
        <filter-class>net.sourceforge.stripes.controller.StripesFilter</filter-class>
        <init-param>
            <param-name>ActionResolver.Packages</param-name>
            <param-value>eionet.web.action</param-value>
        </init-param>
        <init-param>
            <param-name>ActionBeanContext.Class</param-name>
            <param-value>eionet.web.DDActionBeanContext</param-value>
        </init-param>
        <init-param>
            <param-name>LocalePicker.Class</param-name>
            <param-value>eionet.web.extension.LocalePicker</param-value>
        </init-param>
        <init-param>
            <param-name>Extension.Packages</param-name>
            <param-value>eionet.web.extension</param-value>
        </init-param>
        <init-param>
            <param-name>trimSpaces</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>FileUpload.MaximumPostSize</param-name>
            <param-value>35000000</param-value>
        </init-param>
        <init-param>
            <param-name>Interceptor.Classes</param-name>
            <param-value>net.sourceforge.stripes.integration.spring.SpringInterceptor</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>DatasetJspFilter</filter-name>
        <filter-class>eionet.meta.filters.DatasetJspFilter</filter-class>
    </filter>
    <filter>
        <filter-name>DDCORSFilter</filter-name>
        <filter-class>eionet.meta.filters.DDCORSFilter</filter-class>
    </filter>
    <filter>
        <filter-name>DsTableJspFilter</filter-name>
        <filter-class>eionet.meta.filters.DsTableJspFilter</filter-class>
    </filter>
    <filter>
        <filter-name>DataElementJspFilter</filter-name>
        <filter-class>eionet.meta.filters.DataElementJspFilter</filter-class>
    </filter>
    <filter>
        <filter-name>ContentNegotiationFilter</filter-name>
        <filter-class>eionet.web.filter.ContentNegotiationFilter</filter-class>
    </filter>
    <filter>
        <filter-name>ResponseOverrideFilter</filter-name>
        <filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
    </filter>

    <!-- Filter Mappings -->
    <filter-mapping>
        <filter-name>StripesFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContentNegotiationFilter</filter-name>
        <url-pattern>/tables/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ContentNegotiationFilter</filter-name>
        <url-pattern>/dataelements/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ContentNegotiationFilter</filter-name>
        <url-pattern>/schemasets/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ContentNegotiationFilter</filter-name>
        <url-pattern>/vocabulary/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>DDCORSFilter</filter-name>
        <url-pattern>/vocabulary/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ContentNegotiationFilter</filter-name>
        <url-pattern>/vocabularyfolder/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>StripesFilter</filter-name>
        <servlet-name>StripesDispatcher</servlet-name>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>Browser cache controller</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CAS Filter</filter-name>
        <url-pattern>/login</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>DatasetJspFilter</filter-name>
        <url-pattern>/dataset.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>DsTableJspFilter</filter-name>
        <url-pattern>/dstable.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>DataElementJspFilter</filter-name>
        <url-pattern>/data_element.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResponseOverrideFilter</filter-name>
        <url-pattern>/services/siteCodes/search</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResponseOverrideFilter</filter-name>
        <url-pattern>/vocabulary/*</url-pattern>
    </filter-mapping>
    <!-- servlets -->
    <servlet>
        <servlet-name>StripesDispatcher</servlet-name>
        <servlet-class>net.sourceforge.stripes.controller.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/dispatcher</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/documentation/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/schemaset/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/schemasets/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/schema/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/searchelements/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/vocabularies/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/vocabulary/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/vocabularyfolder/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/vocabularyconcept/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/properties/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/property/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/bindvocabulary/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/namespaces/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>rpcrouter</servlet-name>
        <servlet-class>eionet.rpcserver.servlets.XmlRpcRouter</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>AfterCASLoginServlet</servlet-name>
        <servlet-class>eionet.meta.AfterCASLoginServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>Login</servlet-name>
        <servlet-class>eionet.meta.LoginServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>Logout</servlet-name>
        <servlet-class>eionet.meta.LogoutServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DocUpload</servlet-name>
        <servlet-class>eionet.meta.DocUpload</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DocDownload</servlet-name>
        <servlet-class>eionet.meta.DocDownload</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetSchema</servlet-name>
        <servlet-class>eionet.meta.GetSchema</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetPrintout</servlet-name>
        <servlet-class>eionet.meta.GetPrintout</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>CleanupServlet</servlet-name>
        <servlet-class>eionet.meta.CleanupServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetXmlInstance</servlet-name>
        <servlet-class>eionet.meta.exports.xmlinst.XmlInstServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetXForm</servlet-name>
        <servlet-class>eionet.meta.exports.xforms.XFormServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>XlsServlet</servlet-name>
        <servlet-class>eionet.meta.exports.xls.XlsServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>CacheServlet</servlet-name>
        <servlet-class>eionet.meta.exports.CacheServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DsVisualUpload</servlet-name>
        <servlet-class>eionet.meta.DsVisualUpload</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ImgUpload</servlet-name>
        <servlet-class>eionet.meta.ImgUpload</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>HarvestingServlet</servlet-name>
        <servlet-class>eionet.meta.HarvestingServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>InServicesServlet</servlet-name>
        <servlet-class>eionet.meta.inservices.InServicesServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>Import</servlet-name>
        <servlet-class>eionet.meta.Import</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetImportResults</servlet-name>
        <servlet-class>eionet.meta.GetImportResults</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>CodelistServlet</servlet-name>
        <servlet-class>eionet.meta.exports.codelist.CodelistServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GetTableDef</servlet-name>
        <servlet-class>eionet.meta.exports.xmlmeta.TblXmlMetaServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>MdbServlet</servlet-name>
        <servlet-class>eionet.meta.exports.mdb.MdbServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>MSAccessServlet</servlet-name>
        <servlet-class>eionet.meta.exports.msaccess.MSAccessServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>Subscribe</servlet-name>
        <servlet-class>eionet.meta.notif.Subscriber</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>OdsServlet</servlet-name>
        <servlet-class>eionet.meta.exports.ods.OdsServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DbfServlet</servlet-name>
        <servlet-class>eionet.meta.exports.dbf.DbfServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>RdfServlet</servlet-name>
        <servlet-class>eionet.meta.exports.rdf.RdfServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DatasetsServlet</servlet-name>
        <servlet-class>eionet.meta.DatasetsServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>TablesServlet</servlet-name>
        <servlet-class>eionet.meta.TablesServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ElementsServlet</servlet-name>
        <servlet-class>eionet.meta.ElementsServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DownloadServlet</servlet-name>
        <servlet-class>eionet.meta.DownloadServlet</servlet-class>
    </servlet>

    <!-- servlet mappings -->

    <servlet-mapping>
        <servlet-name>rpcrouter</servlet-name>
        <url-pattern>/rpcrouter</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AfterCASLoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Login</servlet-name>
        <url-pattern>/Login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Logout</servlet-name>
        <url-pattern>/Logout</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DocUpload</servlet-name>
        <url-pattern>/DocUpload</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DocDownload</servlet-name>
        <url-pattern>/DocDownload</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetSchema</servlet-name>
        <url-pattern>/GetSchema</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetSchema</servlet-name>
        <url-pattern>/GetContainerSchema</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetPrintout</servlet-name>
        <url-pattern>/GetPrintout</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CleanupServlet</servlet-name>
        <url-pattern>/CleanupServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetXmlInstance</servlet-name>
        <url-pattern>/GetXmlInstance</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetXForm</servlet-name>
        <url-pattern>/GetXForm</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>XlsServlet</servlet-name>
        <url-pattern>/GetXls</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CacheServlet</servlet-name>
        <url-pattern>/GetCache</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ImgUpload</servlet-name>
        <url-pattern>/ImgUpload</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DsVisualUpload</servlet-name>
        <url-pattern>/DsVisualUpload</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>HarvestingServlet</servlet-name>
        <url-pattern>/HarvestingServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>InServicesServlet</servlet-name>
        <url-pattern>/InServices</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Import</servlet-name>
        <url-pattern>/Import</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetImportResults</servlet-name>
        <url-pattern>/GetImportResults</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CodelistServlet</servlet-name>
        <url-pattern>/CodelistServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GetTableDef</servlet-name>
        <url-pattern>/GetTableDef</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MdbServlet</servlet-name>
        <url-pattern>/GetMdb</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MSAccessServlet</servlet-name>
        <url-pattern>/GetMSAccess</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Subscribe</servlet-name>
        <url-pattern>/Subscribe</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>OdsServlet</servlet-name>
        <url-pattern>/GetOds</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DbfServlet</servlet-name>
        <url-pattern>/GetDbf/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>RdfServlet</servlet-name>
        <url-pattern>/GetRdf/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DatasetsServlet</servlet-name>
        <url-pattern>/datasets/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TablesServlet</servlet-name>
        <url-pattern>/tables/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ElementsServlet</servlet-name>
        <url-pattern>/dataelements/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DownloadServlet</servlet-name>
        <url-pattern>/visuals/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DownloadServlet</servlet-name>
        <url-pattern>/schemas/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StripesDispatcher</servlet-name>
        <url-pattern>/void.rdf</url-pattern>
    </servlet-mapping>

    <!-- Mime mappings. -->
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <!-- the application server might allow directory listing. The welcome-files
        are used to overcome workings of such feature -->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <resource-ref>
        <description>DataDict DB</description>
        <res-ref-name>jdbc/datadict</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Restricted Area</web-resource-name>
            <url-pattern>/app/*</url-pattern>
        </web-resource-collection>
    </security-constraint>

    <env-entry>
        <env-entry-name>liquibase.should.run</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>false</env-entry-value>
    </env-entry>

    <!-- force the entire application to security constraint CONFIDENTIAL -->
    <!-- as a result the non-SSL connector will redirect using the redirectPort
        value to the SSL connector -->
    <!-- first match wins -->
    <!-- transport-guarantee can be NONE, INTEGRAL, CONFIDENTIAL -->
    <!-- define SSL security> <security-constraint> <web-resource-collection>
        <web-resource-name>XslXmlFiles</web-resource-name> <description>app files</description>
        <url-pattern>/app/*</url-pattern> <url-pattern>/images/*</url-pattern> <http-method>GET</http-method>
        <http-method>POST</http-method> </web-resource-collection> <user-data-constraint>
        <transport-guarantee>NONE</transport-guarantee> </user-data-constraint> </security-constraint>
        <security-constraint> <web-resource-collection> <web-resource-name>Entire
        Application</web-resource-name> <url-pattern>/*</url-pattern> </web-resource-collection>
        <user-data-constraint> <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint> </security-constraint> <!end def SSL security -->

</web-app>
