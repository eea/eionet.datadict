<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!-- Scans within the base package of the application for @Components
        to configure as beans -->
    <context:component-scan base-package="eionet.meta, eionet.datadict, eionet.web, eionet.doc"/>
    <context:spring-configured/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" primary="true">
		<property name="driverClassName" value="${db.drv}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.usr}"/>
		<property name="password" value="${db.psw}"/>
        <!-- The following two properties required because MySQL kills idle
            connections after 8 hours. -->
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    
    <bean id="nonTxDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.drv}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.usr}"/>
        <property name="password" value="${db.psw}"/>
        <!-- The following two properties required because MySQL kills idle
            connections after 8 hours. -->
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean id="objectMapperProvider" class="eionet.meta.exports.DDObjectMapperProvider" scope="singleton"/>

    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="freemarkerConfiguration"
          class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="/WEB-INF/templates/"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${smtp.host}"/>
        <property name="username" value="${smtp.username}"/>
        <property name="password" value="${smtp.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.starttls.enable">${smtp.tls}</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <!-- System.getProperties() -->
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <!-- The new Properties -->
            <util:properties>
                <prop key="javax.xml.stream.XMLOutputFactory">com.sun.xml.internal.stream.XMLOutputFactoryImpl</prop>
            </util:properties>
        </property>
    </bean>

    <context:property-placeholder location="classpath:datadict.properties"/>
    
    <util:properties id="quartzProperties" location="classpath:quartz.properties" />

</beans>
