
*************************************************
This is the EIONET Data Dictionary (DD) software.
*************************************************

Read the doc/installationmanual.doc for detailed installation instructions.
For doing a quick-start installation, read the following instructions. They
give some hints on how to quickly checkout DD code from SVN, and how to set
it up as a Tomcat web application.

****************************************************************************

1. Create build directory for SVN checkout

shell>cd /var/local/build
shell>svn checkout https://svn.eionet.europa.eu/repositories/Reportnet/datadict/trunk datadict

NB! The resulting /var/local/build/datadict directory will be denoted below as $CHECKOUT_HOME

2. Create local.properties file by making a copy of default.properties.

shell>cd $CHECKOUT_HOME
shell>cp default.properties local.properties

3. In the freshly created local.properties file, change property values as
   appropriate for your environment. You will find meanings of every property
   from inside the file as comments.

4. Create DD database and database user in MySql matching the values in local.properties

mysql>create database DataDict;
mysql>CREATE USER 'dduser'@'localhost' IDENTIFIED BY 'password-here';
mysql>GRANT ALL PRIVILEGES ON DataDict.* TO 'dduser'@'localhost'

4. Import initial database structure and init data

shell>mvn liquibase:update
shell>cd $CHECKOUT_HOME/sql
shell>mysql -u root -p DataDict < dd-attrs-meta.sql
shell>mysql -u root -p DataDict < help-data.sql

5. Unit testing: The unit test mechanism will install its own embedded
   database and create the tables when you execute them. Note that the
   MySQL database will keep running afterwards. You can run individual
   tests with: -Dtest=DatasetImportHandlerTest

shell>cd $CHECKOUT_HOME
shell>mvn -Denv=unittest -Dmaven.test.skip=false test

6. Optional step: revise $CHECKOUT_HOME/custom/*.txt files for modifying
   the content of headers and footers in DD web pages texts and links.
   You will find guidelines from inside $CHECKOUT_HOME/custom/README.txt.

7. Build the DD web application by issuing the following Maven command

shell>cd $CHECKOUT_HOME
shell>mvn -Dmaven.test.skip=true clean install

8. Place the resulting $CHECKOUT_HOME/target/datadict.war into Tomcat's webapps directory, and start Tomcat.



**************************************************************************
Additional applications for modifying DD access permissions and help texts
**************************************************************************

Additional web applications are available for modfying user privileges and help texts in DD:
AclAdmin tool: https://svn.eionet.europa.eu/repositories/Reportnet/acladmin/trunk
HelpAdmin tool: https://svn.eionet.europa.eu/repositories/Reportnet/helpadmin/trunk

Installing these applciations is done by similar steps:

1. Checkout from SVN
2. Create build.properties from default.properties
3. Modify environment specific properties in build.properties file
4. call "ant install"
5. Rename acladmin.properties.dist/helpadmin.properties.dist to acladmin.properties/helpadmin.properties in ROOT/WEB-INF/classes folder and revise the content of the properties files
6. Rename *.acl.dist files to *.acl files in acladmin_contents/acls folder (only in AclAdminTool) and revise the contents of acladmin.gorpu file
7. Create contexts for both applications in tomcat/conf/server.xml and restart Tomcat

REFERENCES for unit testing:
 - http://realsolve.co.uk/site/tech/dbunit-quickstart.php
 - http://www.onjava.com/pub/a/onjava/2004/01/21/dbunit.html
 - http://www.dbunit.org/

