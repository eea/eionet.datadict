# applicaton name displayed in page title and breadcrumtrail
app.name=DD Unittesting

# app.home    Home directory of the application where configuration
#             and logging files are stored. Ant will create this directory in the
#             "prepare" target.
#             NOTE: This directory shall not be directory of your Tomcat codebase e.g webapps.
#
# Don't do this at home kids!
app.home=app_home

#  webapp.home Location where Tomcat application is installed.
#              If you would like to install application into ROOT application context this name must end with ROOT.
webapp.home=/var/lib/tomcat5/datadict_apps/ROOT

# Java Servlets library (servletapi.jar) location. Normally under Tomcat
# installation in common/lib folder eg. /tomcat/common/lib/srvletapi.jar
servletapi.jar=/var/lib/tomcat5/common/lib/[servlet].jar

# full path to MySQL JDBC connector jar
lib-mysql-connector-jar=/usr/share/java/mysql-connector-java.jar

# full path to Apache commons-logging jar
commons-logging-jar=/usr/share/tomcat5/bin/commons-logging-api.jar

#if true, the application will be installed as a new virtual host.
#Otherwise it is installed under webapps folder under existing virtual host.
vhost=true

# "test" database parameters
# This is optimised for Jenkins on Linux. Make a copy if you need to change this file
db.driver=com.mysql.jdbc.Driver
db.jdbcurl=jdbc:mysql:mxj://localhost:3336/DataDictTest?createDatabaseIfNotExist=true&server.basedir=/tmp/datadict-mxj&server.initialize-user=true&useUnicode=true&characterEncoding=UTF-8&emptyStringsConvertToZero=false&jdbcCompliantTruncation=false
db.jdbcurl.encoded=jdbc:mysql:mxj://localhost:3336/DataDictTest?createDatabaseIfNotExist=true&amp;server.basedir=/tmp/datadict-mxj&amp;server.initialize-user=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;emptyStringsConvertToZero=false&amp;jdbcCompliantTruncation=false
db.user=dduser
db.password=asui98cxxo
#db.host=localhost
#db.database=DataDictTest

# Old test database parameters (for running unit tests)
# Not used, use mvn -Denv=unittest -Dmaven.test.skip=false
db.unittest.drv=com.mysql.jdbc.Driver
db.unittest.url=jdbc:mysql:
db.unittest.usr=dduser
db.unittest.pwd=unused

# Host and url of the DD website that will be created by this build
dd.url=http://dd.eionet.europa.eu
dd.host=dd.eionet.europa.eu

ldap.url=ldap://ldap.eionet.europa.eu:389/

# The principal for logging onto LDAP (see javax.naming.Context.SECURITY_PRINCIPAL).
# The authentication mechanism will be "simple" (see javax.naming.Context.SECURITY_AUTHENTICATION).
ldap.principal=cn=Accounts browser,o=EIONET,l=Europe

# The password for the principal identified by ldap.principal. See see javax.naming.Context.SECURITY_CREDENTIALS.
ldap.password=

# MD5 hash from master password for simulating different users in test & development environments. In operational DD, leave it blank.
dd.master.pwd.hash=af97ad15208f08bcaec072779ade8ec5

# SMTP configuration
smtp.host=
smtp.username=
smtp.password=
smtp.tls=true

# Site code notification recipients, where [iso_country_code] will be replaced with by country ISO code.
siteCode.allocate.notification.to=cdda@mnhn.fr,eionet-nfp-[mc_or_cc]-[iso_country_code]@roles.eea.eionet.europa.eu,eionet-nrc-nature-[mc_or_cc]-[iso_country_code]@roles.eea.eionet.europa.eu
siteCode.reserve.notification.to=cdda@mnhn.fr
siteCode.notification.from=cr@eionet.europa.eu
#use this e-mail on test env. If test e-mail is filled, then the notifications are only sent to this e-mail.
siteCode.test.notification.to=

# Full path to Data Dictionary log file
dd.log.file=datadict.log

# URL to ask Content Registry to reharvest DD rdf sources. CR does not allow to ping from any address
# see http://taskman.eionet.europa.eu/projects/reportnet/wiki/ContentRegistryPing
# Add %s into request parameter value as a replacement to harvest URL
cr.reharvest.request.url=http://cr.eionet.europa.eu/ping?uri=%s
